#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef BEACON_SWIFT_H
#define BEACON_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Beacon",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol HSBeaconStringLocalizer;
@class HSBeaconSettings;
@class HSBeaconTintColor;
@class UIColor;
@class NSCoder;
@class NSString;
@class NSBundle;

SWIFT_CLASS_NAMED("BeaconArticleEscalationViewController")
@interface HSBeaconArticleEscalationViewController : UIViewController
- (nonnull instancetype)initWithStringLocalizer:(id <HSBeaconStringLocalizer> _Nonnull)stringLocalizer settings:(HSBeaconSettings * _Nonnull)settings tintColorSettings:(HSBeaconTintColor * _Nonnull)tintColorSettings actionColor:(UIColor * _Nonnull)actionColor messagingEnabled:(BOOL)messagingEnabled OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM_NAMED(NSUInteger, HSBeaconArticleRating, "BeaconArticleRating", open) {
  HSBeaconArticleRatingPositive = 0,
  HSBeaconArticleRatingNegative = 1,
};

@protocol HSBeaconArticleRatingViewDelegate;

SWIFT_CLASS_NAMED("BeaconArticleRatingView")
@interface HSBeaconArticleRatingView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat contentHeight;)
+ (CGFloat)contentHeight SWIFT_WARN_UNUSED_RESULT;
+ (void)setContentHeight:(CGFloat)value;
@property (nonatomic, weak) id <HSBeaconArticleRatingViewDelegate> _Nullable delegate;
@property (nonatomic, strong) id <HSBeaconStringLocalizer> _Nullable stringLocalizer;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("BeaconArticleRatingViewDelegate")
@protocol HSBeaconArticleRatingViewDelegate
- (void)articleRatingView:(HSBeaconArticleRatingView * _Nonnull)view ratedArticle:(enum HSBeaconArticleRating)rating;
@end


SWIFT_CLASS_NAMED("BeaconSearchPlaceholderView")
@interface HSBeaconSearchPlaceholderView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)setPlaceholder:(NSString * _Nonnull)string;
@end


SWIFT_CLASS_NAMED("BeaconThanksFeedbackView")
@interface HSBeaconThanksFeedbackView : UIView
@property (nonatomic, strong) id <HSBeaconStringLocalizer> _Nullable stringLocalizer;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class HSBeaconConfig;
@protocol HSBeaconChatEndedDelegate;
@class HSBeaconAgent;
@class HSBeaconPushNotificationSupport;
@protocol HSBeaconDelegate;

SWIFT_CLASS("_TtC6Beacon16ChatDependencies")
@interface ChatDependencies : NSObject
+ (void)setTintColorSettings:(HSBeaconTintColor * _Nonnull)tintColor;
+ (void)setStringLocalizer:(id <HSBeaconStringLocalizer> _Nonnull)stringLocalizer;
+ (void)setBeaconConfig:(HSBeaconConfig * _Nonnull)config;
+ (void)setBeaconID:(NSString * _Nonnull)beaconID;
+ (void)setDeviceID:(NSString * _Nonnull)deviceID;
+ (void)setSignature:(NSString * _Nullable)signature;
+ (void)setSignatureVerified:(BOOL)verified;
+ (void)setChatEndedDelegate:(id <HSBeaconChatEndedDelegate> _Nullable)delegate;
+ (void)setBeaconAgents:(NSArray<HSBeaconAgent *> * _Nonnull)agents;
+ (void)setEnablePreviousMessages:(BOOL)enabled;
+ (void)setAttachmentsEnabled:(BOOL)enabled;
+ (void)setPushNotificationSupport:(HSBeaconPushNotificationSupport * _Nonnull)support;
+ (BOOL)hasPausedChat SWIFT_WARN_UNUSED_RESULT;
+ (Class _Nonnull)chatViewControllerClass SWIFT_WARN_UNUSED_RESULT;
+ (void)endChat;
+ (BOOL)didChatGenerateConversationWithId:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
+ (void)setRequiresEmail:(BOOL)requiresEmail;
+ (void)setRatingsEnabled:(BOOL)enabled;
+ (void)setBeaconDelegate:(id <HSBeaconDelegate> _Nonnull)delegate;
+ (void)setActionColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSStream;

SWIFT_CLASS("_TtC6Beacon16FoundationStream")
@interface FoundationStream : NSObject <NSStreamDelegate>
/// Delegate for the stream methods. Processes incoming bytes
- (void)stream:(NSStream * _Nonnull)aStream handleEvent:(NSStreamEvent)eventCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CALayer;
@class UIImage;

/// Example class that conforms to <code>GIFAnimatable</code>. Uses default values for the animator frame buffer count and resize behavior. You can either use it directly in your code or use it as a blueprint for your own subclass.
SWIFT_CLASS("_TtC6Beacon12GIFImageView")
@interface GIFImageView : UIImageView
/// Layer delegate method called periodically by the layer. <em>Should not</em> be called manually.
/// \param layer The delegated layer.
///
- (void)displayLayer:(CALayer * _Nonnull)layer;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, HSBeaconRoute, open) {
  HSBeaconRouteHome = 0,
  HSBeaconRouteAsk = 1,
  HSBeaconRouteAskMessage = 2,
  HSBeaconRouteAskChat = 3,
  HSBeaconRouteAnswers = 4,
  HSBeaconRoutePreviousMessages = 5,
  HSBeaconRouteSearch = 6,
  HSBeaconRouteArticle = 7,
  HSBeaconRouteUnknown = 8,
};


SWIFT_CLASS("_TtC6Beacon15HSBeaconRouting")
@interface HSBeaconRouting : NSObject
@property (nonatomic, readonly) enum HSBeaconRoute route;
@property (nonatomic) BOOL fulfilled;
@property (nonatomic) BOOL animated;
@property (nonatomic, readonly, copy) NSString * _Nonnull articleId;
@property (nonatomic, readonly, copy) NSString * _Nonnull searchQuery;
- (nonnull instancetype)initWithNavigation:(NSString * _Nonnull)navigation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithArticleId:(NSString * _Nonnull)articleId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSearchText:(NSString * _Nonnull)searchText OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRoute:(enum HSBeaconRoute)route routeData:(NSString * _Nullable)routeData OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isValidWithDocsEnabled:(BOOL)docsEnabled messagingEnabled:(BOOL)messagingEnabled chatEnabled:(BOOL)chatEnabled previousMessagesEnabled:(BOOL)previousMessagesEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)invalidRouteMessageWithStringLocalizer:(id <HSBeaconStringLocalizer> _Nonnull)stringLocalizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HSBeaconConversation;

SWIFT_CLASS("_TtC6Beacon35HSBeaconUnreadMessageCountGenerator")
@interface HSBeaconUnreadMessageCountGenerator : NSObject
+ (NSInteger)unreadMessageCountWith:(NSArray<HSBeaconConversation *> * _Nonnull)previousMessages SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol HSEnterEmailViewControllerDelegate;

SWIFT_CLASS("_TtC6Beacon26HSEnterEmailViewController")
@interface HSEnterEmailViewController : UIViewController
@property (nonatomic, weak) id <HSEnterEmailViewControllerDelegate> _Nullable delegate;
+ (HSEnterEmailViewController * _Nonnull)instantiateViewController SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP6Beacon34HSEnterEmailViewControllerDelegate_")
@protocol HSEnterEmailViewControllerDelegate
- (void)enterEmailController:(HSEnterEmailViewController * _Nonnull)controller didEnter:(NSString * _Nonnull)email;
@end




SWIFT_CLASS_NAMED("LoadingView")
@interface HSBeaconLoadingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface NSNotification (SWIFT_EXTENSION(Beacon))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSString * _Nonnull beaconUnreadCountDidChangeNotification;)
+ (NSString * _Nonnull)beaconUnreadCountDidChangeNotification SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSString * _Nonnull beaconOpenedNotification;)
+ (NSString * _Nonnull)beaconOpenedNotification SWIFT_WARN_UNUSED_RESULT;
@end





@interface UIColor (SWIFT_EXTENSION(Beacon))
+ (UIColor * _Nonnull)beaconBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)secondaryBeaconBackground SWIFT_WARN_UNUSED_RESULT;
/// The color for content layered on top of secondary backgrounds.
+ (UIColor * _Nonnull)tertiaryBeaconBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)disabledAction SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)primaryText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)primaryAccent SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatBubbleText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatBorder SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatErrorBorder SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)brightOrange SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatErrorBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)agentAvatarBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)agentTextColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)unfurledMediaBodyColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatProgressColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)grey400 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)grey500 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)placeholderText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)toolbarButton SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)borderButton SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)yellow800 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)escalationThanksBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)green600 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)hsTertiaryText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)primaryAction SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)hsSecondaryText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)badge SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)goodGlow SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)badGlow SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)neutralGlow SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)defaultBeacon SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)lightBeacon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)exceedsMinimumContrastWith:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)contrasting:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
@end





@interface UINavigationController (SWIFT_EXTENSION(Beacon))
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL))completion;
- (void)popToRootViewControllerAnimated:(BOOL)animated completion:(void (^ _Nullable)(BOOL))completion;
- (void)popToRootViewControllerAnimated:(BOOL)animated completedToRootVC:(void (^ _Nullable)(UIViewController * _Nullable))completedToRootVC;
- (void)popToViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL))completion;
- (void)configureWith:(HSBeaconTintColor * _Nonnull)tintColorSettings;
@end



@interface UITraitCollection (SWIFT_EXTENSION(Beacon))
@property (nonatomic, readonly) BOOL isRegularRegular;
- (BOOL)hasDifferentSizeClassWithComparedTo:(UITraitCollection * _Nullable)traitCollection SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIWindow (SWIFT_EXTENSION(Beacon))
@property (nonatomic, readonly, strong) UIViewController * _Nullable topViewController;
@end


@class HSBeaconArticleViewController;
@class HSBeaconAskSelectionController;
@class HSBeaconMessageEntryContainerController;
@class HSBeaconPreviousMessagesController;

SWIFT_CLASS_NAMED("ViewControllerFactory")
@interface HSBeaconViewControllerFactory : NSObject
+ (HSBeaconArticleViewController * _Nonnull)articleViewController SWIFT_WARN_UNUSED_RESULT;
+ (HSBeaconAskSelectionController * _Nonnull)askSelectionViewController SWIFT_WARN_UNUSED_RESULT;
+ (UIViewController * _Nonnull)chatViewController SWIFT_WARN_UNUSED_RESULT;
+ (HSBeaconMessageEntryContainerController * _Nonnull)messageEntryViewController SWIFT_WARN_UNUSED_RESULT;
+ (HSBeaconPreviousMessagesController * _Nonnull)previousMessagesViewController SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Beacon9WebSocket")
@interface WebSocket : NSObject <NSStreamDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef BEACON_SWIFT_H
#define BEACON_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Beacon",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol HSBeaconStringLocalizer;
@class HSBeaconSettings;
@class HSBeaconTintColor;
@class UIColor;
@class NSCoder;
@class NSString;
@class NSBundle;

SWIFT_CLASS_NAMED("BeaconArticleEscalationViewController")
@interface HSBeaconArticleEscalationViewController : UIViewController
- (nonnull instancetype)initWithStringLocalizer:(id <HSBeaconStringLocalizer> _Nonnull)stringLocalizer settings:(HSBeaconSettings * _Nonnull)settings tintColorSettings:(HSBeaconTintColor * _Nonnull)tintColorSettings actionColor:(UIColor * _Nonnull)actionColor messagingEnabled:(BOOL)messagingEnabled OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM_NAMED(NSUInteger, HSBeaconArticleRating, "BeaconArticleRating", open) {
  HSBeaconArticleRatingPositive = 0,
  HSBeaconArticleRatingNegative = 1,
};

@protocol HSBeaconArticleRatingViewDelegate;

SWIFT_CLASS_NAMED("BeaconArticleRatingView")
@interface HSBeaconArticleRatingView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat contentHeight;)
+ (CGFloat)contentHeight SWIFT_WARN_UNUSED_RESULT;
+ (void)setContentHeight:(CGFloat)value;
@property (nonatomic, weak) id <HSBeaconArticleRatingViewDelegate> _Nullable delegate;
@property (nonatomic, strong) id <HSBeaconStringLocalizer> _Nullable stringLocalizer;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("BeaconArticleRatingViewDelegate")
@protocol HSBeaconArticleRatingViewDelegate
- (void)articleRatingView:(HSBeaconArticleRatingView * _Nonnull)view ratedArticle:(enum HSBeaconArticleRating)rating;
@end


SWIFT_CLASS_NAMED("BeaconSearchPlaceholderView")
@interface HSBeaconSearchPlaceholderView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)setPlaceholder:(NSString * _Nonnull)string;
@end


SWIFT_CLASS_NAMED("BeaconThanksFeedbackView")
@interface HSBeaconThanksFeedbackView : UIView
@property (nonatomic, strong) id <HSBeaconStringLocalizer> _Nullable stringLocalizer;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class HSBeaconConfig;
@protocol HSBeaconChatEndedDelegate;
@class HSBeaconAgent;
@class HSBeaconPushNotificationSupport;
@protocol HSBeaconDelegate;

SWIFT_CLASS("_TtC6Beacon16ChatDependencies")
@interface ChatDependencies : NSObject
+ (void)setTintColorSettings:(HSBeaconTintColor * _Nonnull)tintColor;
+ (void)setStringLocalizer:(id <HSBeaconStringLocalizer> _Nonnull)stringLocalizer;
+ (void)setBeaconConfig:(HSBeaconConfig * _Nonnull)config;
+ (void)setBeaconID:(NSString * _Nonnull)beaconID;
+ (void)setDeviceID:(NSString * _Nonnull)deviceID;
+ (void)setSignature:(NSString * _Nullable)signature;
+ (void)setSignatureVerified:(BOOL)verified;
+ (void)setChatEndedDelegate:(id <HSBeaconChatEndedDelegate> _Nullable)delegate;
+ (void)setBeaconAgents:(NSArray<HSBeaconAgent *> * _Nonnull)agents;
+ (void)setEnablePreviousMessages:(BOOL)enabled;
+ (void)setAttachmentsEnabled:(BOOL)enabled;
+ (void)setPushNotificationSupport:(HSBeaconPushNotificationSupport * _Nonnull)support;
+ (BOOL)hasPausedChat SWIFT_WARN_UNUSED_RESULT;
+ (Class _Nonnull)chatViewControllerClass SWIFT_WARN_UNUSED_RESULT;
+ (void)endChat;
+ (BOOL)didChatGenerateConversationWithId:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
+ (void)setRequiresEmail:(BOOL)requiresEmail;
+ (void)setRatingsEnabled:(BOOL)enabled;
+ (void)setBeaconDelegate:(id <HSBeaconDelegate> _Nonnull)delegate;
+ (void)setActionColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSStream;

SWIFT_CLASS("_TtC6Beacon16FoundationStream")
@interface FoundationStream : NSObject <NSStreamDelegate>
/// Delegate for the stream methods. Processes incoming bytes
- (void)stream:(NSStream * _Nonnull)aStream handleEvent:(NSStreamEvent)eventCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CALayer;
@class UIImage;

/// Example class that conforms to <code>GIFAnimatable</code>. Uses default values for the animator frame buffer count and resize behavior. You can either use it directly in your code or use it as a blueprint for your own subclass.
SWIFT_CLASS("_TtC6Beacon12GIFImageView")
@interface GIFImageView : UIImageView
/// Layer delegate method called periodically by the layer. <em>Should not</em> be called manually.
/// \param layer The delegated layer.
///
- (void)displayLayer:(CALayer * _Nonnull)layer;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, HSBeaconRoute, open) {
  HSBeaconRouteHome = 0,
  HSBeaconRouteAsk = 1,
  HSBeaconRouteAskMessage = 2,
  HSBeaconRouteAskChat = 3,
  HSBeaconRouteAnswers = 4,
  HSBeaconRoutePreviousMessages = 5,
  HSBeaconRouteSearch = 6,
  HSBeaconRouteArticle = 7,
  HSBeaconRouteUnknown = 8,
};


SWIFT_CLASS("_TtC6Beacon15HSBeaconRouting")
@interface HSBeaconRouting : NSObject
@property (nonatomic, readonly) enum HSBeaconRoute route;
@property (nonatomic) BOOL fulfilled;
@property (nonatomic) BOOL animated;
@property (nonatomic, readonly, copy) NSString * _Nonnull articleId;
@property (nonatomic, readonly, copy) NSString * _Nonnull searchQuery;
- (nonnull instancetype)initWithNavigation:(NSString * _Nonnull)navigation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithArticleId:(NSString * _Nonnull)articleId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSearchText:(NSString * _Nonnull)searchText OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRoute:(enum HSBeaconRoute)route routeData:(NSString * _Nullable)routeData OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isValidWithDocsEnabled:(BOOL)docsEnabled messagingEnabled:(BOOL)messagingEnabled chatEnabled:(BOOL)chatEnabled previousMessagesEnabled:(BOOL)previousMessagesEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)invalidRouteMessageWithStringLocalizer:(id <HSBeaconStringLocalizer> _Nonnull)stringLocalizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HSBeaconConversation;

SWIFT_CLASS("_TtC6Beacon35HSBeaconUnreadMessageCountGenerator")
@interface HSBeaconUnreadMessageCountGenerator : NSObject
+ (NSInteger)unreadMessageCountWith:(NSArray<HSBeaconConversation *> * _Nonnull)previousMessages SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol HSEnterEmailViewControllerDelegate;

SWIFT_CLASS("_TtC6Beacon26HSEnterEmailViewController")
@interface HSEnterEmailViewController : UIViewController
@property (nonatomic, weak) id <HSEnterEmailViewControllerDelegate> _Nullable delegate;
+ (HSEnterEmailViewController * _Nonnull)instantiateViewController SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP6Beacon34HSEnterEmailViewControllerDelegate_")
@protocol HSEnterEmailViewControllerDelegate
- (void)enterEmailController:(HSEnterEmailViewController * _Nonnull)controller didEnter:(NSString * _Nonnull)email;
@end




SWIFT_CLASS_NAMED("LoadingView")
@interface HSBeaconLoadingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface NSNotification (SWIFT_EXTENSION(Beacon))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSString * _Nonnull beaconUnreadCountDidChangeNotification;)
+ (NSString * _Nonnull)beaconUnreadCountDidChangeNotification SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSString * _Nonnull beaconOpenedNotification;)
+ (NSString * _Nonnull)beaconOpenedNotification SWIFT_WARN_UNUSED_RESULT;
@end





@interface UIColor (SWIFT_EXTENSION(Beacon))
+ (UIColor * _Nonnull)beaconBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)secondaryBeaconBackground SWIFT_WARN_UNUSED_RESULT;
/// The color for content layered on top of secondary backgrounds.
+ (UIColor * _Nonnull)tertiaryBeaconBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)disabledAction SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)primaryText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)primaryAccent SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatBubbleText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatBorder SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatErrorBorder SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)brightOrange SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatErrorBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)agentAvatarBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)agentTextColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)unfurledMediaBodyColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)chatProgressColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)grey400 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)grey500 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)placeholderText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)toolbarButton SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)borderButton SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)yellow800 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)escalationThanksBackground SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)green600 SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)hsTertiaryText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)primaryAction SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)hsSecondaryText SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)badge SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)goodGlow SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)badGlow SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)neutralGlow SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)defaultBeacon SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)lightBeacon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)exceedsMinimumContrastWith:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)contrasting:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
@end





@interface UINavigationController (SWIFT_EXTENSION(Beacon))
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL))completion;
- (void)popToRootViewControllerAnimated:(BOOL)animated completion:(void (^ _Nullable)(BOOL))completion;
- (void)popToRootViewControllerAnimated:(BOOL)animated completedToRootVC:(void (^ _Nullable)(UIViewController * _Nullable))completedToRootVC;
- (void)popToViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL))completion;
- (void)configureWith:(HSBeaconTintColor * _Nonnull)tintColorSettings;
@end



@interface UITraitCollection (SWIFT_EXTENSION(Beacon))
@property (nonatomic, readonly) BOOL isRegularRegular;
- (BOOL)hasDifferentSizeClassWithComparedTo:(UITraitCollection * _Nullable)traitCollection SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIWindow (SWIFT_EXTENSION(Beacon))
@property (nonatomic, readonly, strong) UIViewController * _Nullable topViewController;
@end


@class HSBeaconArticleViewController;
@class HSBeaconAskSelectionController;
@class HSBeaconMessageEntryContainerController;
@class HSBeaconPreviousMessagesController;

SWIFT_CLASS_NAMED("ViewControllerFactory")
@interface HSBeaconViewControllerFactory : NSObject
+ (HSBeaconArticleViewController * _Nonnull)articleViewController SWIFT_WARN_UNUSED_RESULT;
+ (HSBeaconAskSelectionController * _Nonnull)askSelectionViewController SWIFT_WARN_UNUSED_RESULT;
+ (UIViewController * _Nonnull)chatViewController SWIFT_WARN_UNUSED_RESULT;
+ (HSBeaconMessageEntryContainerController * _Nonnull)messageEntryViewController SWIFT_WARN_UNUSED_RESULT;
+ (HSBeaconPreviousMessagesController * _Nonnull)previousMessagesViewController SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Beacon9WebSocket")
@interface WebSocket : NSObject <NSStreamDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
